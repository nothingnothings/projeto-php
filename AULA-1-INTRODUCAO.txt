








ok.... consegui instalar o php, o laravel e o composer...

















--> não sei mt coisa sobre o laravel...









-> instalamos o laravel...











--> O COMPOSER... ---> 





É UM DEPENDENCY MANAGER PARA O PHP (é tipo um NPM)...










--> os caras do laravel usaram packages já existentes


PARA CONSTRUIR SEU FRAMEWORK...
















--> ok...






--> o professor abre o terminal e executa 





'composer create-project laravel/laravel'...










-> O PROFESSOR COLOCA '--prefer-dist',


para especificar que quer BAIXAR E INSTALAR NESSE FOLDER...










dentro do folder de 'example-app',

temos 



todos os arquivos...




















ok.....







OK.... SE QUEREMOS RODAR 1 DEV SERVER COM ISSO,




devemos rodar 'npm run dev'...












-> o laravel serve as files lá do folder de 'public'..





SEU SERVER PRECISA APONTAR PARA O FOLDER DE 'public',





e TODO SEUS 'APP FILES' estarão 1 folder acima dessas files dentro do 'public'...



















--> SE DEU TUDO CERTO, VC VAI ENCONTRAR 'LARAVEL 5' no seu browser,


na página hosteada...











----------------------------











ok... temos o default, então...












até agora, foi bem fácil...













mas ganhei um error:




  opensslErrorStack: [ 'error:03000086:digital envelope routines::initialization error' ],
  library: 'digital envelope routines',
  reason: 'unsupported',
  code: 'ERR_OSSL_EVP_UNSUPPORTED'


















ok... consertei o problema... era uma versão do node...








ficou assim:












{
    "private": true,
    "scripts": {
        "dev": "npm run development",
        "development": "cross-env NODE_OPTIONS=--openssl-legacy-provider NODE_ENV=development node_modules/webpack/bin/webpack.js --progress --config=node_modules/laravel-mix/setup/webpack.config.js",
        "watch": "npm run development -- --watch",
        "watch-poll": "npm run watch -- --watch-poll",
        "hot": "cross-env NODE_ENV=development node_modules/webpack-dev-server/bin/webpack-dev-server.js --inline --hot --disable-host-check --config=node_modules/laravel-mix/setup/webpack.config.js",
        "prod": "npm run production",
        "production": "cross-env NODE_ENV=production node_modules/webpack/bin/webpack.js --no-progress --config=node_modules/laravel-mix/setup/webpack.config.js"
    },
    "devDependencies": {
        "axios": "^0.19",
        "cross-env": "^7.0",
        "laravel-mix": "^5.0.1",
        "lodash": "^4.17.19",
        "resolve-url-loader": "^3.1.0",
        "sass": "^1.15.2",
        "sass-loader": "^8.0.0",
        "vue-template-compiler": "^2.7.14"
    }
}










E O OUTPUT:








> cross-env NODE_OPTIONS=--openssl-legacy-provider NODE_ENV=development node_modules/webpack/bin/webpack.js --progress --config=node_modules/laravel-mix/setup/webpack.config.js

98% after emitting SizeLimitsPlugin

 DONE  Compiled successfully in 3364ms                                                        14:41:14

       Asset     Size   Chunks             Chunk Names
/css/app.css  0 bytes  /js/app  [emitted]  /js/app
  /js/app.js  596 KiB  /js/app  [emitted]  /js/app
Installing shortcut: "C:\\Users\\Usußrio\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\SnoreToast\\0.7.0\\SnoreToast.lnk" "A:\\projeto19-laravel\\example-app\\node_modules\\node-notifier\\vendor\\snoreToast\\snoretoast-x64.exe" Snore.DesktopToasts.0.7.0












certo..











com 'npm run watch'


ficamos com a versão web dev server 




do laravel... (com hot reload)...















precisei ajustar algumas coisas.... o setup 


do laravel não é tão intuitivo quanto projetos node...







hmmm







tudo isso é uma porcaria ,


muita coisa para instalar,

só para ter um setup laravel básico...








é melhor usar o docker,

que já 


providencia todo o development environment..







--> vou usar docker...











--> rodo 'docker-compose up'...













ok... consegui rodar o app laravel...






agora devo seguir a aula do professor....









temos o folder de 'app',

que será
 
 

 o lugar no qual settaremos toda nossa business logic

 (routing,

 controllers,

 etc...



 )









 -> O FOLDER DE 'bootstrap' não usaremos mt...








 --> O FOLDER DE 'config' contém várias partes 


 de nosso app laravel que podemos configurar...





 coisas como a 'authentication package',




e configs gerais para o app..














no folder de 'database',


podemos 

usar 




1 FEATURE MT LEGAL 


DO 


LARAVEL,








que é a possibilidad de rodar seeds e migrations...









-> podemos rodar database migrations e 

seeds...















-> o formato de uma  



SEED é assim:











<?php

namespace Database\Seeders;

// use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    /**
     * Seed the application's database.
     */
    public function run(): void
    {
        // \App\Models\User::factory(10)->create();

        // \App\Models\User::factory()->create([
        //     'name' => 'Test User',
        //     'email' => 'test@example.com',
        // ]);
    }
}










-> 



SÃO PHP FILES QUE PREENCHEM DATABASES..











--> vc evita usar coisas como 'php myAdmin' (GUIs),





ou 'pgAdmin3'...











--> MAS, NESSE CASO,

PODEMOS 

ESCREVER 1 ARQUIVO PHP E USAR O CLI DO __ LARAVEL ___ PARA 

EXECUTAR __ ESSA FILE..... --> E ISSO VAI _ CRIAR TODO O SQL CODE 

NECESSÁRIO A NÓS,
QUE 
VAI 


ESCREVER 

TODA ESSA DATA NA DATABASE (as tables e seeds)...











-> OK... JÁ O FOLDER DE 'public'


É UM LOCAL EM QUE 

NÃO FAREMOS MT COISA...








MAS __ É IMPORTANTE, MESMO ASSIM...












é em 'Public'


EM QUE 

COLOCAREMOS 

NOSSOS ARQUIVOS 


CSS E JAVASCRIPT... ( colocaremos o folder 'src' para 


os arquivos css e javascript..



)









--> TEMOS TAMBÉM O FOLDER DE 'resources' --> NESSE FOLDER,






TEMOS O FOLDER DE 'assets',

EM QUE 

PODERÍAMOS USAR SASS ou 




SCSS,




SE QUISÉSSEMOS... E O LARAVEL VEM COM 



1 'gulpfile'




e 


1 'app.scss'...







MAS O PROFESSOR VAI SE LIVRAR DISSO,


E USAR 




SEU PRÓPRIO 'gulpfile' workflow... (ou então usar 


o css comum)..


















--> CERTO... no folder de 'lang', dentro de 'resources',








PODEMOS SETTAR '''TRANSLATION FILES'',










SÃO ARQUIVOS EM QUE TEMOS BASICAMENTE ARRAYS,

E AÍ 



OS TEXTS QUE VAMOS QUERER DISPLAYAR...














mas vamos ficar apenas com inglês, nesse app...











MAS A COISA IMPORTANTE, DENTRO DE 'resources',





é o folder de 'views' --> AÍ CRIAREMOS NOSSAS VIEWS,

AS COISAS QUE 

SERÃO RENDERIZADAS 


NA TELA...














--> e o laravel 

POSSUI UMA TEMPLATING ENGINE PRÓPRIA, A 'BLADE'...











--> TEMOS 1 ARQUIVO 'welcome.blade.php':











<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <title>Laravel</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,600&display=swap" rel="stylesheet" />

        <!-- Styles -->
        <style>
            /* ! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com */*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}::after,::before{--tw-content:''}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:Figtree, sans-serif;font-feature-settings:normal}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*, ::before, ::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.relative{position:relative}.mx-auto{margin-left:auto;margin-right:auto}.mx-6{margin-left:1.5rem;margin-right:1.5rem}.ml-4{margin-left:1rem}.mt-16{margin-top:4rem}.mt-6{margin-top:1.5rem}.mt-4{margin-top:1rem}.-mt-px{margin-top:-1px}.mr-1{margin-right:0.25rem}.flex{display:flex}.inline-flex{display:inline-flex}.grid{display:grid}.h-16{height:4rem}.h-7{height:1.75rem}.h-6{height:1.5rem}.h-5{height:1.25rem}.min-h-screen{min-height:100vh}.w-auto{width:auto}.w-16{width:4rem}.w-7{width:1.75rem}.w-6{width:1.5rem}.w-5{width:1.25rem}.max-w-7xl{max-width:80rem}.shrink-0{flex-shrink:0}.scale-100{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.grid-cols-1{grid-template-columns:repeat(1, minmax(0, 1fr))}.items-center{align-items:center}.justify-center{justify-content:center}.gap-6{gap:1.5rem}.gap-4{gap:1rem}.self-center{align-self:center}.rounded-lg{border-radius:0.5rem}.rounded-full{border-radius:9999px}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-red-50{--tw-bg-opacity:1;background-color:rgb(254 242 242 / var(--tw-bg-opacity))}.bg-dots-darker{background-image:url("data:image/svg+xml,%3Csvg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.22676 0C1.91374 0 2.45351 0.539773 2.45351 1.22676C2.45351 1.91374 1.91374 2.45351 1.22676 2.45351C0.539773 2.45351 0 1.91374 0 1.22676C0 0.539773 0.539773 0 1.22676 0Z' fill='rgba(0,0,0,0.07)'/%3E%3C/svg%3E")}.from-gray-700\/50{--tw-gradient-from:rgb(55 65 81 / 0.5);--tw-gradient-to:rgb(55 65 81 / 0);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.via-transparent{--tw-gradient-to:rgb(0 0 0 / 0);--tw-gradient-stops:var(--tw-gradient-from), transparent, var(--tw-gradient-to)}.bg-center{background-position:center}.stroke-red-500{stroke:#ef4444}.stroke-gray-400{stroke:#9ca3af}.p-6{padding:1.5rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.text-center{text-align:center}.text-right{text-align:right}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-sm{font-size:0.875rem;line-height:1.25rem}.font-semibold{font-weight:600}.leading-relaxed{line-height:1.625}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99 / var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39 / var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128 / var(--tw-text-opacity))}.underline{-webkit-text-decoration-line:underline;text-decoration-line:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.shadow-2xl{--tw-shadow:0 25px 50px -12px rgb(0 0 0 / 0.25);--tw-shadow-colored:0 25px 50px -12px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.shadow-gray-500\/20{--tw-shadow-color:rgb(107 114 128 / 0.2);--tw-shadow:var(--tw-shadow-colored)}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.selection\:bg-red-500 *::selection{--tw-bg-opacity:1;background-color:rgb(239 68 68 / var(--tw-bg-opacity))}.selection\:text-white *::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.selection\:bg-red-500::selection{--tw-bg-opacity:1;background-color:rgb(239 68 68 / var(--tw-bg-opacity))}.selection\:text-white::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.hover\:text-gray-900:hover{--tw-text-opacity:1;color:rgb(17 24 39 / var(--tw-text-opacity))}.hover\:text-gray-700:hover{--tw-text-opacity:1;color:rgb(55 65 81 / var(--tw-text-opacity))}.focus\:rounded-sm:focus{border-radius:0.125rem}.focus\:outline:focus{outline-style:solid}.focus\:outline-2:focus{outline-width:2px}.focus\:outline-red-500:focus{outline-color:#ef4444}.group:hover .group-hover\:stroke-gray-600{stroke:#4b5563}.z-10{z-index: 10}@media (prefers-reduced-motion: no-preference){.motion-safe\:hover\:scale-\[1\.01\]:hover{--tw-scale-x:1.01;--tw-scale-y:1.01;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}}@media (prefers-color-scheme: dark){.dark\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39 / var(--tw-bg-opacity))}.dark\:bg-gray-800\/50{background-color:rgb(31 41 55 / 0.5)}.dark\:bg-red-800\/20{background-color:rgb(153 27 27 / 0.2)}.dark\:bg-dots-lighter{background-image:url("data:image/svg+xml,%3Csvg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.22676 0C1.91374 0 2.45351 0.539773 2.45351 1.22676C2.45351 1.91374 1.91374 2.45351 1.22676 2.45351C0.539773 2.45351 0 1.91374 0 1.22676C0 0.539773 0.539773 0 1.22676 0Z' fill='rgba(255,255,255,0.07)'/%3E%3C/svg%3E")}.dark\:bg-gradient-to-bl{background-image:linear-gradient(to bottom left, var(--tw-gradient-stops))}.dark\:stroke-gray-600{stroke:#4b5563}.dark\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175 / var(--tw-text-opacity))}.dark\:text-white{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.dark\:shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.dark\:ring-1{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.dark\:ring-inset{--tw-ring-inset:inset}.dark\:ring-white\/5{--tw-ring-color:rgb(255 255 255 / 0.05)}.dark\:hover\:text-white:hover{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.group:hover .dark\:group-hover\:stroke-gray-400{stroke:#9ca3af}}@media (min-width: 640px){.sm\:fixed{position:fixed}.sm\:top-0{top:0px}.sm\:right-0{right:0px}.sm\:ml-0{margin-left:0px}.sm\:flex{display:flex}.sm\:items-center{align-items:center}.sm\:justify-center{justify-content:center}.sm\:justify-between{justify-content:space-between}.sm\:text-left{text-align:left}.sm\:text-right{text-align:right}}@media (min-width: 768px){.md\:grid-cols-2{grid-template-columns:repeat(2, minmax(0, 1fr))}}@media (min-width: 1024px){.lg\:gap-8{gap:2rem}.lg\:p-8{padding:2rem}}
        </style>
    </head>
    <body class="antialiased">
        <h1>HELLO!!!</h1>
        <div class="relative sm:flex sm:justify-center sm:items-center min-h-screen bg-dots-darker bg-center bg-gray-100 dark:bg-dots-lighter dark:bg-gray-900 selection:bg-red-500 selection:text-white">
            @if (Route::has('login'))
                <div class="sm:fixed sm:top-0 sm:right-0 p-6 text-right z-10">
                    @auth
                        <a href="{{ url('/home') }}" class="font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Home</a>
                    @else
                        <a href="{{ route('login') }}" class="font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Log in</a>

                        @if (Route::has('register'))
                            <a href="{{ route('register') }}" class="ml-4 font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Register</a>
                        @endif
                    @endauth
                </div>
            @endif

            <div class="max-w-7xl mx-auto p-6 lg:p-8">
                <div class="flex justify-center">
                    <svg viewBox="0 0 62 65" fill="none" xmlns="http://www.w3.org/2000/svg" class="h-16 w-auto bg-gray-100 dark:bg-gray-900">
                        <path d="M61.8548 14.6253C61.8778 14.7102 61.8895 14.7978 61.8897 14.8858V28.5615C61.8898 28.737 61.8434 28.9095 61.7554 29.0614C61.6675 29.2132 61.5409 29.3392 61.3887 29.4265L49.9104 36.0351V49.1337C49.9104 49.4902 49.7209 49.8192 49.4118 49.9987L25.4519 63.7916C25.3971 63.8227 25.3372 63.8427 25.2774 63.8639C25.255 63.8714 25.2338 63.8851 25.2101 63.8913C25.0426 63.9354 24.8666 63.9354 24.6991 63.8913C24.6716 63.8838 24.6467 63.8689 24.6205 63.8589C24.5657 63.8389 24.5084 63.8215 24.456 63.7916L0.501061 49.9987C0.348882 49.9113 0.222437 49.7853 0.134469 49.6334C0.0465019 49.4816 0.000120578 49.3092 0 49.1337L0 8.10652C0 8.01678 0.0124642 7.92953 0.0348998 7.84477C0.0423783 7.8161 0.0598282 7.78993 0.0697995 7.76126C0.0884958 7.70891 0.105946 7.65531 0.133367 7.6067C0.152063 7.5743 0.179485 7.54812 0.20192 7.51821C0.230588 7.47832 0.256763 7.43719 0.290416 7.40229C0.319084 7.37362 0.356476 7.35243 0.388883 7.32751C0.425029 7.29759 0.457436 7.26518 0.498568 7.2415L12.4779 0.345059C12.6296 0.257786 12.8015 0.211853 12.9765 0.211853C13.1515 0.211853 13.3234 0.257786 13.475 0.345059L25.4531 7.2415H25.4556C25.4955 7.26643 25.5292 7.29759 25.5653 7.32626C25.5977 7.35119 25.6339 7.37362 25.6625 7.40104C25.6974 7.43719 25.7224 7.47832 25.7523 7.51821C25.7735 7.54812 25.8021 7.5743 25.8196 7.6067C25.8483 7.65656 25.8645 7.70891 25.8844 7.76126C25.8944 7.78993 25.9118 7.8161 25.9193 7.84602C25.9423 7.93096 25.954 8.01853 25.9542 8.10652V33.7317L35.9355 27.9844V14.8846C35.9355 14.7973 35.948 14.7088 35.9704 14.6253C35.9792 14.5954 35.9954 14.5692 36.0053 14.5405C36.0253 14.4882 36.0427 14.4346 36.0702 14.386C36.0888 14.3536 36.1163 14.3274 36.1375 14.2975C36.1674 14.2576 36.1923 14.2165 36.2272 14.1816C36.2559 14.1529 36.292 14.1317 36.3244 14.1068C36.3618 14.0769 36.3942 14.0445 36.4341 14.0208L48.4147 7.12434C48.5663 7.03694 48.7383 6.99094 48.9133 6.99094C49.0883 6.99094 49.2602 7.03694 49.4118 7.12434L61.3899 14.0208C61.4323 14.0457 61.4647 14.0769 61.5021 14.1055C61.5333 14.1305 61.5694 14.1529 61.5981 14.1803C61.633 14.2165 61.6579 14.2576 61.6878 14.2975C61.7103 14.3274 61.7377 14.3536 61.7551 14.386C61.7838 14.4346 61.8 14.4882 61.8199 14.5405C61.8312 14.5692 61.8474 14.5954 61.8548 14.6253ZM59.893 27.9844V16.6121L55.7013 19.0252L49.9104 22.3593V33.7317L59.8942 27.9844H59.893ZM47.9149 48.5566V37.1768L42.2187 40.4299L25.953 49.7133V61.2003L47.9149 48.5566ZM1.99677 9.83281V48.5566L23.9562 61.199V49.7145L12.4841 43.2219L12.4804 43.2194L12.4754 43.2169C12.4368 43.1945 12.4044 43.1621 12.3682 43.1347C12.3371 43.1097 12.3009 43.0898 12.2735 43.0624L12.271 43.0586C12.2386 43.0275 12.2162 42.9888 12.1887 42.9539C12.1638 42.9203 12.1339 42.8916 12.114 42.8567L12.1127 42.853C12.0903 42.8156 12.0766 42.7707 12.0604 42.7283C12.0442 42.6909 12.023 42.656 12.013 42.6161C12.0005 42.5688 11.998 42.5177 11.9931 42.4691C11.9881 42.4317 11.9781 42.3943 11.9781 42.3569V15.5801L6.18848 12.2446L1.99677 9.83281ZM12.9777 2.36177L2.99764 8.10652L12.9752 13.8513L22.9541 8.10527L12.9752 2.36177H12.9777ZM18.1678 38.2138L23.9574 34.8809V9.83281L19.7657 12.2459L13.9749 15.5801V40.6281L18.1678 38.2138ZM48.9133 9.14105L38.9344 14.8858L48.9133 20.6305L58.8909 14.8846L48.9133 9.14105ZM47.9149 22.3593L42.124 19.0252L37.9323 16.6121V27.9844L43.7219 31.3174L47.9149 33.7317V22.3593ZM24.9533 47.987L39.59 39.631L46.9065 35.4555L36.9352 29.7145L25.4544 36.3242L14.9907 42.3482L24.9533 47.987Z" fill="#FF2D20"/>
                    </svg>
                </div>

                <div class="mt-16">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8">
                        <a href="https://laravel.com/docs" class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                            <div>
                                <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25" />
                                    </svg>
                                </div>

                                <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Documentation</h2>

                                <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                    Laravel has wonderful documentation covering every aspect of the framework. Whether you are a newcomer or have prior experience with Laravel, we recommend reading our documentation from beginning to end.
                                </p>
                            </div>

                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="self-center shrink-0 stroke-red-500 w-6 h-6 mx-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75" />
                            </svg>
                        </a>

                        <a href="https://laracasts.com" class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                            <div>
                                <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                        <path stroke-linecap="round" d="M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z" />
                                    </svg>
                                </div>

                                <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Laracasts</h2>

                                <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                    Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process.
                                </p>
                            </div>

                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="self-center shrink-0 stroke-red-500 w-6 h-6 mx-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75" />
                            </svg>
                        </a>

                        <a href="https://laravel-news.com" class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                            <div>
                                <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 7.5h1.5m-1.5 3h1.5m-7.5 3h7.5m-7.5 3h7.5m3-9h3.375c.621 0 1.125.504 1.125 1.125V18a2.25 2.25 0 01-2.25 2.25M16.5 7.5V18a2.25 2.25 0 002.25 2.25M16.5 7.5V4.875c0-.621-.504-1.125-1.125-1.125H4.125C3.504 3.75 3 4.254 3 4.875V18a2.25 2.25 0 002.25 2.25h13.5M6 7.5h3v3H6v-3z" />
                                    </svg>
                                </div>

                                <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Laravel News</h2>

                                <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                    Laravel News is a community driven portal and newsletter aggregating all of the latest and most important news in the Laravel ecosystem, including new package releases and tutorials.
                                </p>
                            </div>

                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="self-center shrink-0 stroke-red-500 w-6 h-6 mx-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75" />
                            </svg>
                        </a>

                        <div class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                            <div>
                                <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M6.115 5.19l.319 1.913A6 6 0 008.11 10.36L9.75 12l-.387.775c-.217.433-.132.956.21 1.298l1.348 1.348c.21.21.329.497.329.795v1.089c0 .426.24.815.622 1.006l.153.076c.433.217.956.132 1.298-.21l.723-.723a8.7 8.7 0 002.288-4.042 1.087 1.087 0 00-.358-1.099l-1.33-1.108c-.251-.21-.582-.299-.905-.245l-1.17.195a1.125 1.125 0 01-.98-.314l-.295-.295a1.125 1.125 0 010-1.591l.13-.132a1.125 1.125 0 011.3-.21l.603.302a.809.809 0 001.086-1.086L14.25 7.5l1.256-.837a4.5 4.5 0 001.528-1.732l.146-.292M6.115 5.19A9 9 0 1017.18 4.64M6.115 5.19A8.965 8.965 0 0112 3c1.929 0 3.716.607 5.18 1.64" />
                                    </svg>
                                </div>

                                <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Vibrant Ecosystem</h2>

                                <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                    Laravel's robust library of first-party tools and libraries, such as <a href="https://forge.laravel.com" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Forge</a>, <a href="https://vapor.laravel.com" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Vapor</a>, <a href="https://nova.laravel.com" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Nova</a>, and <a href="https://envoyer.io" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Envoyer</a> help you take your projects to the next level. Pair them with powerful open source libraries like <a href="https://laravel.com/docs/billing" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Cashier</a>, <a href="https://laravel.com/docs/dusk" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Dusk</a>, <a href="https://laravel.com/docs/broadcasting" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Echo</a>, <a href="https://laravel.com/docs/horizon" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Horizon</a>, <a href="https://laravel.com/docs/sanctum" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Sanctum</a>, <a href="https://laravel.com/docs/telescope" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Telescope</a>, and more.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="flex justify-center mt-16 px-0 sm:items-center sm:justify-between">
                    <div class="text-center text-sm text-gray-500 dark:text-gray-400 sm:text-left">
                        <div class="flex items-center gap-4">
                            <a href="https://github.com/sponsors/taylorotwell" class="group inline-flex items-center hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="-mt-px mr-1 w-5 h-5 stroke-gray-400 dark:stroke-gray-600 group-hover:stroke-gray-600 dark:group-hover:stroke-gray-400">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z" />
                                </svg>
                                Sponsor
                            </a>
                        </div>
                    </div>

                    <div class="ml-4 text-center text-sm text-gray-500 dark:text-gray-400 sm:text-right sm:ml-0">
                        Laravel v{{ Illuminate\Foundation\Application::VERSION }} (PHP v{{ PHP_VERSION }})
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>



















--> certo... possui algumas sintaxes diferentes...







--> COM ESSA TEMPLATING ENGINE,

VC CRIA SUAS VIEWS A PARTIR DE VÁRIOS COMPONENTS, QUE 

SÃO AGLUTINADOS, JUSTAPOSTOS,







E __ QUE __ ENTÃO TE DEIXA COM 1 MANEIRA BEM ESTRUTURADA 


DE PASSAR DATA, A ESSES VIEWS...












-> E TODOS NOSSOS VIEWS FICARÃO NESSE FOLDER DE 'view'...










--> TEMOS O VIEW DEFAULT DO LARAVEL, QUE SERVE DE EXEMPLO...





-------------







TEMOS O FOLDER DE 'vendor', também...













SE EVENTUALMENTE INSTALARMOS MAIS PACKAGES,






ESSES PACKAGES ___ PODERÃO 'PUBLICAR VIEWS',



e essas views vão existir dentro de 'vendor>nome-da-package>views'...



















o 'vendor' 


É __ _O  NODE_MODULES __ DO LARAVEL... 











O PRÓPRIO FRAMEWORK 'LARAVEL' 



fica instalado/contido nesse folder de 'vendor'...









--> e NUNCA VAMOS QUERER MEXER EM NADA __ QUE __


fica dentro de 'vendor'...













-> podemos vir a instalar novas packages,


mas 


nunca podemos 


mexer 


diretamente no código de 'vendors'( exatamente como em 'node_modules', em que 
não 


se deve mexer diretamente nos folders desse folder... )













-> A MAIOR PARTE DAS PACKAGES DO 

LARAVEL 


FORNECE COMANDOS QUE TE DÃO A POSSIBILIDADE 




DE _  'PUBLISH' AS COISAS QUE 

VC 



DEVE SER CAPAZ DE MUDAR,



NESSE FOLDER AÍ..












-> OK... E O FOLDER DE 'STORAGE' -> ISSO SEGURA O __ CACHE__ DO SEU APP...





TAMBÉM SEGURA ALGUMAS FILES...










--> O FOLDER DE 'tests' --> ISSO É USADO SE VC ESTIVER RODANDO UNIT TESTS...















--> O PROFESSOR FALARÁ 


BREVEMENTE SOBRE CADA FILE...














--> PRIMEIRO, TEMOS O ARQUIVO '.env':







APP_NAME=Laravel
APP_ENV=local
APP_KEY=base64:LdIlv1PFZbpX5zSRj4yvzxh3fApHBueDQ9uNpBOEAuw=
APP_DEBUG=true
APP_URL=http://localhost

LOG_CHANNEL=stack
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=mysql
DB_HOST=mysql
DB_PORT=3306
DB_DATABASE=homestead
DB_USERNAME=homestead
DB_PASSWORD=password

BROADCAST_DRIVER=log
CACHE_DRIVER=file
FILESYSTEM_DISK=local
QUEUE_CONNECTION=sync
SESSION_DRIVER=file
SESSION_LIFETIME=120

MEMCACHED_HOST=127.0.0.1

REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=smtp
MAIL_HOST=mailpit
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_HOST=
PUSHER_PORT=443
PUSHER_SCHEME=https
PUSHER_APP_CLUSTER=mt1

VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
VITE_PUSHER_HOST="${PUSHER_HOST}"
VITE_PUSHER_PORT="${PUSHER_PORT}"
VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"
VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"





----------------------------------










ESSA FILE __ PROVIDENCIA __ ALGUMA BASIC CONFIG PARA NOSSO APP...







-> ELA DEFINE COISAS COMO 'NOSSA DATABASE CONNECTION' A SER UTILIZADA,




E TAMBÉM 

COISAS COMO DETALHES DE MAIL (se tivermos 1 mailing service):









MAIL_MAILER=smtp
MAIL_HOST=mailpit
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"
















OK...








ADICIONALMENTE AS CONFIG FILES,

O '.env' 




É __a MANEIRA PRINCIPAL DE SETTAR ALGUMAS 'BASIC CONNECTIONS'..













--> JÁ O ARQUIVO 'artisan'



NÃO É IMPORTANTE POR SI SÓ,
 
   




   MAS __ O COMANDO/ARQUIVO



   DE 'artisan' 

  





É PRATICAMENTE A 'COMMAND LINE TOOL'


do laravel...








E PODEMOS USAR 



ESSA TOOL POR MEIO 



DO RUN DE 


'php artisan xxxxxxx' (xxx = comando que vc quer rodar)...












SE QUISERMOS RODAR ALGUM COMANDO NO 


NOSSO PROJETO,



como 1 comando para criar novos módulos,


devemos 




fazer isso __FORA__ DO CONTAINER (

  pq o conteúdo disso será replicado no container, mais tarde, com bind 
  mounts...
)










--> É CLARO QUE, SE QUISERMOS CRIAR NOVAS SEEDS/MIGRATIONS A PARTIR 


DE 

'php artisan xxxx',





DEVEMOS __ COLOCAR 1 BIND MOUNT TAMBÉM PARA O FOLDER DE 'databases',


dentro 



do nosso container de 'php' (Que contém o laravel app),






PQ VAMOS QUERER QUE ESSES ARQUIVOS TAMBÉM SEJAM REPLICADOS 


DENTRO 

DO CONTAINER...











modules, migrations, seeds, views, controllers --> o LARAVEL É UM 


MVC FRAMEWORK,






E, COMO TAL,



TEMOS AQUELA ESTRITA SEPARAÇÃO ENTRE 'VIEW,
 MODEL E CONTROLLER.'..














É ASSIM QUE SERÃO ESTRUTURADOS OS 


LARAVEL APPS...












--> OK... TEMOS APENAS AQUELA VIEW 



default..









-> O PROFESSOR QUER CRIAR 1 APP _ DE 'MINI SOCIAL NETWORK'...












--> TEREMOS 1 STREAM DE POSTS,

E PODEREMOS CRIAR POSTS NÓS MESMOS...










-> E SEREMOS CAPAZES DE VISUALIZAR TODOS OS POSTS DE TODAS AS OUTRAS 

PESSOAS,

PODEREMOS FZER 'LIKE' E 'DISLIKE' DESSES POSTS..









-> E PODEREMOS FAZER SIGNUP E SIGNIN (e logout)..












-> OK, MAS QUAIS SÃO AS FEATURES NECESSÁRIAS?








1) 1 DATABASE, PARA ARMAZENAR NOSSOS USERS, NOSSOS POSTS,

NOSSOS LIKES E DISLIKES...









2) PRECISAMOS DE ALGUM TIPO DE AUTHENTICATION LOGIC,


PQ NOSSOS USERS DEVERÃO SER CAPAZES DE FAZER SIGNUP (create account),


E DEPOIS 

DEVERÃO SER CAPAZES DE 

FAZER 'SIGNIN' (login),

E DEPOIS 

LOGOUT...










O PROFESSOR DIZ QUE 



O LARAVEL JÁ PROVIDENCIA ALGUMAS COISAS QUE 

NOS AJUDAM COM AUTHENTICATION...










TEREMOS MODELS, VIEWS, CONTROLLERS,








TEREMOS ROUTES, TBM...





TEREMOS AUTHENTICATION TBM...












TAMBÉM PODEREMOS TER 'MAILING'...








É UM APP COM BASTANTE FEATURES QUE VEREMOS 



EM APPS NORMAIS..









CHEGA DE PAPO...








VAMOS COMEÇAR COM A VIEW DE 'welcome'...

















-> QUEREMOS:






'''SE NÃO ESTIVERMOS LOGGED IN,

NÃO SEREMOS CAPAZES DE VER OS POSTS''''..












-> PARA ISSO, DEVEMOS EDITAR NOSSA DEFAULT VIEW,



para que seja 1 landing page...








-------------------------------









OK... AÍ O PROFESSOR DIZ QUE A PRIMEIRA COISA QUE ELE QUER FAZER,

QUE É INTERESSANTE DA TEMPLATING ENGINE DO LARAVEL,








É _ ____ TER __ 1 'SKELETON FILE',

TIPO 1 BASIC LAYOUT,

QUE 

AÍ 
ELE 

PODERÁ REUTILIZAR 



NAS DIFERENTES PAGES...












--> PQ NOSSA PAGE DE 'login' 

SERÁ 



1 HTML FILE,





que precisará de 1 stylesheet...










--> ESSE SKELETON SERÁ O MESMO PARA MUITAS PÁGINAS...













--> O PROFESSOR QUER CRIAR 1 BASIC LAYOUT,


QUE PODERÁ SER EXTENDIDO POR NOSSAS 



DIVERSAS VIEWS...








-> E AÍ PODEREMOS ADICIONAR O 'CORE' DE CADA VIEW EM CIMA 


DESSE LAYOUT...






--> PARA ISSO, O PROFESSOR CRIA 1 OUTRO FOLDER DENTRO DE 'views',




DE NOME 'layout'...













--> DENTRO DESSE FOLDER, O PROFESSOR CRIA 1 FILE DE NOME 'master.blade.php'...

















--> IMPORTANTE!!!! -->  SE VC DESEJA __ USAR __ 


A TEMPLATING 

ENGINE (DO LARAVEL) --> vc PRECISA USAR 'master.blade.php'...







DENTRO DESSA MASTER FILE,


COLOCAMOS ESTE CÓDIGO 'SKELETON':












<!DOCTYPE html>
<html lang="en">
<head>
    <title>Post Manager</title>
</head>
<body>

</body>
</html>











CERTO...







MAS AGORA TEREMOS ALGO DIFERENTE...









VAMOS QUERER __ 1 DIFERENTE TÍTULO PARA CADA 1 DAS PAGES...







--> para isso, precisamos de um TÍTULO DINÂMICO...




-> PARA ISSO, PRECISAMOS DE DYNAMIC MARKUP...














MAS COMO PODEMOS FAZER ISSO, COM LARAVEL?















--> PRECISAMOS COLOCAR 1 'HOOK' DENTRO DO NOSSO SKELETON...












--> para isso,

devemos 


usar 


1 feature/function/expression dos arquivos 'blade',




que é 




'@yield('title')
















TIPO ASSIM:











<!DOCTYPE html>
<html lang="en">

<head>
    <!-- 'yield', com @, faz parte da sintaxe de 'hooks' do laravel -->
    <title>@yield('')</title>
</head>

<body>

</body>

</html>
















--> TODAS AS 


TEMPLATING EXPRESSIONS DO LARAVEL ('blade')



EXIGEM 


'@' no início...
















--> CERTO... 'yield' é a function que queremos usar..













-> aqui dizemos ''''ALGUMA COISA DEVE SER INSERIDA AQUI''....










EX:











<!DOCTYPE html>
<html lang="en">

<head>
    <!-- 'yield', com @, faz parte da sintaxe de 'hooks' do laravel -->
    <!-- 'yield' é um 'placeholder', quer dizer 'insira algo aqui, neste local' -->
    <title>@yield('title')</title>
</head>

<body>

</body>

</html>
























--> OK... AÍ, NAS NOSSAS OUTRAS VIEWS,

SEREMOS CAPAZES ___ DE ACESSAR __ 



__ESSE PLACEHOLDER,


DE 'title', por meio desse name,

E AÍ 

INSERIR CONTEÚDO ALI DENTRO...














--> VAMOS INSERIR ISSO TAMBÉM NO NOSSO BODY,




JUSTAMENTE PQ 'master'

SERÁ 

1 

HOC COMPONENT/LAYOUT..










ex:








<!DOCTYPE html>
<html lang="en">

<head>
    <!-- 'yield', com @, faz parte da sintaxe de 'hooks' do laravel -->
    <!-- 'yield' é um 'placeholder', quer dizer 'insira algo aqui, neste local' -->
    <title>@yield('title')</title>
</head>

<body>
    <div class="container">
        @yield('content')
    </div>

</body>

</html>




















--> TIPO ALGO ASSIM...











OK... AGORA, EM 'welcome.blade.php',

VAMOS QUERER FAZER _ eXTEND__ 


Daquele layout de 'master.blade.php'...













E FAREMOS ISSO POR MEIO DO WRITE DE 


'@extends()'













TIPO ASSIM:






@extends('title')














OK... MAS ISSO ESTÁ ERRADO...








ESTÁ ERRADO PQ PRECISAMOS PASSAR O 'PATH ATÉ 


O FILE DE QUE ESTAMOS FAZENDO EXTEND'...









--> QUEREMOS ENTRAR DENTRO DE 'layouts',


e depois acessar a file de 'master'...






É POR ISSO QUE ESCREVO ASSIM:









@extends('layouts.master')
{{-- para conseguirmos 'INSERIR CONTEÚDO'
dentro desse layout, precisamos primeiramente passar o
PATH ATÉ O SEU ARQUIVO, para definir que vamos o utilizar --}}
















COM ISSO, CONSEGUIMOS DEFINIR QUE 'ESSE ARQUIVO/COISA' 

SERÁ UTILIZADO 
DENTRO/COM ESSE ARQUIVO 'welcome.blade.php'...













lembre-se: AQUI __ QUEREMOS _ INSERIR __ 


O CONTEÚDO DE 'welcome.blade.php'


PARA DENTRO 

DO PLACEHOLDER 


de 

'title',

dentro 

de 'master.blade.php'...










--> NÓS TARGETTAMOS 1 SECTION POR MEIO DE OUTRA EXPRESSÃO LARAVEL,





QUE É 

'@section()'...





EX:






@extends('layouts.master')
{{-- para conseguirmos 'INSERIR CONTEÚDO'
dentro desse layout, precisamos primeiramente passar o
PATH ATÉ O SEU ARQUIVO, para definir que vamos o utilizar --}}



@section('title')


















CERTO... AÍ A KEY,


NESSE PARÂMETRO,

SEMPRE DEVE __ SER IGUAL A KEY QUE VC DEFINIU LÁ EM 'master.blade.php',





tipo aqui:









<!DOCTYPE html>
<html lang="en">

<head>
    <!-- 'yield', com @, faz parte da sintaxe de 'hooks' do laravel -->
    <!-- 'yield' é um 'placeholder', quer dizer 'insira algo aqui, neste local' -->
    <title>@yield('title')</title>
</head>

<body>
    <div class="container">
        @yield('content')
    </div>

</body>

</html>












->  CERTO....









ISSO VAI ESSENCIALMENTE __ DIZER AO LARAVEL QUE 




ELE DEVERÁ INSERIR A PARTE DE 'title', de 'welcome.blade.php',
 lá em 'master.blade.php',

dentro

do statement de '@yield('title)'...














MAS NÃO PARAMOS POR AQUI.. precisamos definir '@endsection',

para que 



ESSA PARTE FIQUE 'FECHADA', acabe, no nosso html...







tipo assim:









@extends('layouts.master')
{{-- para conseguirmos 'INSERIR CONTEÚDO'
dentro do layout de 'master', precisamos primeiramente passar o
PATH ATÉ O SEU ARQUIVO, para definir que vamos inserir coisas deste arquivo 'welcome.blade.php' dentro de partes dele --}}



@section('title')
    Welcome to my humble app!
@endsection() {{-- usamos isto, essa função, para FECHAR o trecho de 1 placeholder --}}



@section('content')
    This is the Content!
@endsection()















OK.. AGORA ISSO ESTÁ SENDO INSERIDO 

DENTRO 







DOS PLACEHOLDERS DE 'title' e 'content', lá em 'master.blade.php'...














ok.... funcionou...








ISSO É O BÁSICO DO USO DE VIEWS COM A TEMPLATING ENGINE DO LARAVEL..




ISSO NOS PERMITE DEFINIR 1 'SKELETON',


E AÍ 



ENTÃO 

SIMPLESMENTE USAR COMPONENTS PARA CRIAR NOSSAS VIEWS...













-> PODEMOS SÓ COPIAR ESSA ESTRUTURA EM OUTRAS FILES E AÍ 




IR TROCANDO 


AS PARTES APROPRIADAS..







--> ISSO NOS DEIXA CRIARE MUDAR RAPIDAMENTE VIEWS...







( PQ NÃO FICAMOS NOS REPETINDO)...









CERTo...







FICAMOS FAMILIARIZADOS COM A ESTRUTURA DO LARAVEL..








NO PRÓXIMO VIDEO, O PROFESSOR MOSTRARÁ 



BUSINESS LOGIC,
E O BUILD DE NOSSO APP..