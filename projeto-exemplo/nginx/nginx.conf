server {
    listen 80; # faz listen NA PORT 80...
    index index.php index.html; # HANDLA REQUESTS A 'INDEX FILES'...
    server_name localhost; 
    root /var/www/html/public; #TAMBÉM ASSEGURA QUE PROCURAMOS NESSE DIRECTORY PARA FILES QUE USAREMOS PARA 'RESPOND' AOS REQUESTS... (ainda não temos esses arquivos)..
    location / { #SÃO REDIRECTION RULES... -> BASICAMENTE ASSEGURAM QUE INCOMING REQUESTS SÃO REDIRECIONADOS A PHP FILES....
        try_files $uri $uri/ /index.php?$query_string;
    }
    location ~ \.php$ { # OS REQUESTS QUE JÁ TARGETTAM PHP FILES SÃO ENTÃO REDIRECIONADOS AO NOSSO 'PHP INTERPRETER'... é isso que fazemos, aqui...
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # 'php' em 'php:9000' poderia ser um IP ADDRESS, como '127.0.0.1'...
        # aqui, 'php', nesse local, se refere ao 'PHP CONTAINER', justamente por 'server' e 'php' (nossos containers) ESTAREM EM 1 MESMA NETWORK, POR CONTA DO DOCKER-COMPOSE (comportamento default do compose, que coloca todos os containers/services em 1 mesma network)...
        # targettamos a port de '9000' no container 'php', pq essa é a port que A IMAGE BASE DO PHP nos deixa exposta...
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info; 
    }
}




